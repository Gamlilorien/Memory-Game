{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","src","image","text","name","alt","onClick","clickStatus","id","Wrapper","children","Title","App","state","friends","score","maxscore","gameOver","_this","setState","forEach","friend","count","alert","concat","find","c","i","sort","Math","random","_this2","this","components_Wrapper","components_Title","map","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"mxDAceA,MAXf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,MAAOC,KAAMP,EAAMQ,KAAMC,IAAKT,EAAMQ,KAAMJ,UAAU,gBAAgBM,QAAS,kBAAMV,EAAMW,YAAYX,EAAMY,eCCpHC,MAJf,SAAiBb,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMc,iBCQ1BC,MATf,SAAef,GACb,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASC,IAAI,kCAAkCI,IAAI,SAClER,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMc,mBCiElBE,6MAhEbC,MAAQ,CACNC,UACAC,MAAO,EACPC,SAAU,KAGZC,SAAW,WAYT,OAXIC,EAAKL,MAAME,MAAQG,EAAKL,MAAMG,UAChCE,EAAKC,SAAS,CAACH,SAAUE,EAAKL,MAAME,QAGtCG,EAAKL,MAAMC,QAAQM,QAAQ,SAAAC,GACzBA,EAAOC,MAAQ,IAGjBC,MAAK,mCAAAC,OAAoCN,EAAKL,MAAME,QAEpDG,EAAKC,SAAS,CAACJ,MAAO,KACf,KAGTR,YAAc,SAAAC,GACZU,EAAKL,MAAMC,QAAQW,KAAK,SAACC,EAAGC,GAC1B,GAAID,EAAElB,KAAOA,EAAI,CACf,GAAyB,IAArBM,EAAQa,GAAGL,MAab,OAZAR,EAAQa,GAAGL,MAAQR,EAAQa,GAAGL,MAAQ,EACtCJ,EAAKC,SAAS,CAACJ,MAAQG,EAAKL,MAAME,MAAQ,IAC1CG,EAAKL,MAAMC,QAAQc,KAAK,kBAAMC,KAAKC,SAAW,KACpB,KAArBZ,EAAKL,MAAME,QACZG,EAAKC,SAAS,CAACH,SAAUE,EAAKL,MAAME,MAAO,IAC3CG,EAAKC,SAAS,CAACJ,MAAO,IACtBG,EAAKL,MAAMC,QAAQM,QAAQ,SAAAC,GACzBA,EAAOC,MAAQ,IAGjBC,MAAK,0BAAAC,OAA2BN,EAAKL,MAAME,MAAO,MAE/C,EAEPG,EAAKD,uFAOJ,IAAAc,EAAAC,KACP,OACEnC,EAAAC,EAAAC,cAACkC,EAAD,KACEpC,EAAAC,EAAAC,cAACmC,EAAD,mCACCF,KAAKnB,MAAMC,QAAQqB,IAAI,SAAAd,GAAM,OAC5BxB,EAAAC,EAAAC,cAACqC,EAAD,CACE7B,YAAawB,EAAKxB,YAClBC,GAAIa,EAAOb,GACX6B,IAAKhB,EAAOb,GACZJ,KAAMiB,EAAOjB,KACbF,MAAOmB,EAAOnB,kBA1DRoC,mBCDlBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.13b2843a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n        <img src={props.image} text={props.name} alt={props.name} className=\"img-container\" onClick={() => props.clickStatus(props.id)}/>\n      {/* <span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n        ùòÖ\n      </span> */}\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n  <div className=\"title\">\n    <img className=\"atlogo\" src=\"/images/Adventure_Time_logo.png\" alt=\"logo\" />\n    <h1 className=\"title\">{props.children}</h1>\n  </div>);\n  ;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    maxscore: 0\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.maxscore) {\n      this.setState({maxscore: this.state.score});\n    }\n    //reset all friend Count values for next game\n    this.state.friends.forEach(friend => {\n      friend.count = 0;\n    });\n    //Show game over\n    alert(`Gunter says Game Over! \\nScore: ${this.state.score}`);\n    //Reset Score to 0 for next game\n    this.setState({score: 0});\n    return true;\n  }\n\n  clickStatus = id => {\n    this.state.friends.find((c, i) => {\n      if (c.id === id) {\n        if (friends[i].count === 0){\n          friends[i].count = friends[i].count + 1;\n          this.setState({score : this.state.score + 1});\n          this.state.friends.sort(() => Math.random() - 0.5)\n            if(this.state.score === 11) {\n              this.setState({maxscore: this.state.score +1});\n              this.setState({score: 0});\n              this.state.friends.forEach(friend => {\n                friend.count = 0;\n              });\n              //Show win message\n              alert(`You Win!!! \\n \\nScore: ${this.state.score +1}`);\n            }\n          return true; \n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Come on and Click a Friend</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            clickStatus={this.clickStatus}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}